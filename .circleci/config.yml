jobs:
  build:
    docker:
      - image: circleci/golang
      - image: circleci/postgres
    working_directory: /tmp/project
    steps:
      - attach_workspace:
          at: /tmp/project
      - run: go get github.com/lib/pq
      - run: go build -o code/server hello.go
      - store_artifacts:
          path: code

  test:
    docker:
      - image: circleci/golang
      - image: circleci/postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: demotable
    working_directory: /tmp/project
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client-9.6
      - run: mkdir -p /tmp/workspace
      - run: go get github.com/lib/pq
      - run: go get github.com/gorilla/mux
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: seeding db
          command: |
            set PGPASSWORD=postgres
            sudo apt-get install -y postgresql-client
            psql --host localhost -U postgres < demotable.sql
      - run: go test
      - run:
          name: katalon
          command: ./Katalon\ Studio.app/Contents/MacOS/katalon --args -noSplash  -runMode=console -projectPath="/demo/demo.prj" -retry=0 -testSuiteCollectionPath="Test Suites/API"
      - persist_to_workspace:
          root: /tmp/project
          paths: 
            - ./

workflows:
  version: 2
  test-build:
    jobs:
      - test
      - build:
          requires:
            - test